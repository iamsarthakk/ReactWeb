{"version":3,"sources":["components/DishdetailComponent.js","components/MenuComponent.js","shared/dishes.js","App.js","serviceWorker.js","index.js"],"names":["DishDetail","props","state","dish","Card","CardImg","width","src","image","alt","name","CardBody","CardTitle","CardText","description","comments","cmnts","map","commnts","key","id","className","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","this","RenderDish","RenderComments","Component","Menu","selectedDish","setState","menu","dishes","onClick","onDishSelect","CardImgOverlay","DISHES","category","label","price","rating","App","Navbar","dark","color","NavbarBrand","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2728c601.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n    CardTitle } from 'reactstrap';\r\n\r\nclass DishDetail extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  RenderDish(dish) {\r\n            return(\r\n              <Card>\r\n                  <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                  <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                  </CardBody>\r\n              </Card>\r\n            );\r\n      }\r\n\r\n       RenderComments(comments) {\r\n           if (comments != null) {\r\n               const cmnts = comments.map((commnts) => {\r\n                   return (\r\n                       <ul key={commnts.id} className=\"list-unstyled\">\r\n                           <li>\r\n                               <p> {commnts.comment} </p>\r\n                               <p> -- {commnts.author},\r\n                                   &nbsp;\r\n                                   {new Intl.DateTimeFormat('en-US', {\r\n                                       year: 'numeric',\r\n                                       month: 'short',\r\n                                       day: '2-digit'\r\n                                   }).format(new Date(Date.parse(commnts.date)))}\r\n                               </p>\r\n                           </li>\r\n                       </ul>\r\n                   );\r\n               });\r\n\r\n               return (\r\n                   <div >\r\n                       <h4> Comments </h4>\r\n                       {cmnts}\r\n                   </div>\r\n               );\r\n           // if comments is empty\r\n           } else {\r\n               return (\r\n                   <div></div>\r\n               );\r\n           }\r\n       }\r\n\r\n\r\n       render() {\r\n               if (this.props.dish != null) {\r\n                   return (\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                           {this.RenderDish(this.props.dish) }\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                           {this.RenderComments(this.props.dish.comments)}\r\n                        </div>\r\n                    </div>\r\n\r\n                   );\r\n               } else {\r\n                   return (\r\n                       <div></div>\r\n                   );\r\n               }\r\n             }\r\n\r\n}\r\n\r\nexport default DishDetail;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n    CardTitle } from 'reactstrap';\r\nimport DishDetail from './DishdetailComponent';\r\n\r\n    class Menu extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.state = {\r\n                selectedDish: null\r\n            }\r\n        }\r\n\r\n        onDishSelect(dish) {\r\n            this.setState({ selectedDish: dish});\r\n        }\r\n\r\n\r\n        render() {\r\n            const menu = this.props.dishes.map((dish) => {\r\n                return (\r\n                  <div  className=\"col-12 col-md-5 m-1\">\r\n                    <Card key={dish.id}\r\n                      onClick={() => this.onDishSelect(dish)}>\r\n                      <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                      <CardImgOverlay>\r\n                          <CardTitle>{dish.name}</CardTitle>\r\n                      </CardImgOverlay>\r\n                    </Card>\r\n                  </div>\r\n                );\r\n            });\r\n\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n\r\n                    <DishDetail dish={this.state.selectedDish} />\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default Menu;\r\n","export const DISHES =\r\n    [\r\n        {\r\n        id: 0,\r\n        name:'Uthappizza',\r\n        image: 'assets/images/uthappizza.png',\r\n        category: 'mains',\r\n        label:'Hot',\r\n        price:'4.99',\r\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]                        },\r\n        {\r\n        id: 1,\r\n        name:'Zucchipakoda',\r\n        image: 'assets/images/zucchipakoda.png',\r\n        category: 'appetizer',\r\n        label:'',\r\n        price:'1.99',\r\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        },\r\n        {\r\n        id: 2,\r\n        name:'Vadonut',\r\n        image: 'assets/images/vadonut.png',\r\n        category: 'appetizer',\r\n        label:'New',\r\n        price:'1.99',\r\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        },\r\n        {\r\n        id: 3,\r\n        name:'ElaiCheese Cake',\r\n        image: 'assets/images/elaicheesecake.png',\r\n        category: 'dessert',\r\n        label:'',\r\n        price:'2.99',\r\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        }\r\n    ];\r\n","import React, {Component}  from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport Menu from './components/MenuComponent';\nimport { DISHES } from './shared/dishes';\n\nimport './App.css';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dishes: DISHES\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar dark color=\"primary\">\n          <div className=\"container\">\n            <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\n          </div>\n        </Navbar>\n        <Menu dishes={this.state.dishes} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}