{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","to","id","width","Menu","menu","dishes","map","key","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","About","RenderLeader","left","object","body","heading","title","list","leaders","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","Fragment","isOpen","toggle","value","outline","onClick","RenderDish","top","RenderComments","comments","cmnts","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.deffa8f6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};\r\n","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n          <FadeTransform\r\n              in\r\n              transformProps={{\r\n                  exitTransform: 'scale(0.5) translateY(-50%)'\r\n              }}>\r\n              <Card>\r\n                  <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                  <CardBody>\r\n                  <CardTitle>{item.name}</CardTitle>\r\n                  {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                  <CardText>{item.description}</CardText>\r\n                  </CardBody>\r\n              </Card>\r\n          </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish}\r\n                      isLoading={props.dishesLoading}\r\n                      errMess={props.dishErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    // function RenderMenuItem (props) {}\r\n    function RenderMenuItem ({dish}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    // function Menu (props) {}\r\n    const Menu = (props) => {\r\n        // map (JS keyword): iterating over every dish in the dishes array here\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                // key: every item require key attribute to specift it.\r\n                // the key helps React to recognise each one of these elements, uniquely.\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        }); // take the JS objects\r\n\r\n\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem> <Link to='home'>Home</Link> </BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n            Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(\r\n        values.firstname,\r\n        values.lastname,\r\n        values.telnum,\r\n        values.email,\r\n        values.agree,\r\n        values.contactType,\r\n        values.message\r\n      );\r\n    }\r\n\r\n\r\n  render(){\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                          <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                              <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                              <Row className=\"form-group\">\r\n                                  <Col md={{size: 6, offset: 2}}>\r\n                                      <div className=\"form-check\">\r\n                                          <Label check>\r\n                                              <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                  className=\"form-check-input\"\r\n                                                   /> {' '}\r\n                                                  <strong>May we contact you?</strong>\r\n                                          </Label>\r\n                                      </div>\r\n                                  </Col>\r\n                                  <Col md={{size: 3, offset: 1}}>\r\n                                      <Control.select model=\".contactType\" name=\"contactType\"\r\n                                          className=\"form-control\">\r\n                                          <option>Tel.</option>\r\n                                          <option>Email</option>\r\n                                      </Control.select>\r\n                                  </Col>\r\n                              </Row>\r\n                              <Row className=\"form-group\">\r\n                                  <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                  <Col md={10}>\r\n                                      <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                          rows=\"12\"\r\n                                          className=\"form-control\" />\r\n                                  </Col>\r\n                              </Row>\r\n                              <Row className=\"form-group\">\r\n                                  <Col md={{size:10, offset: 2}}>\r\n                                      <Button type=\"submit\" color=\"primary\">\r\n                                      Send Feedback\r\n                                      </Button>\r\n                                  </Col>\r\n                              </Row>\r\n                          </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\nfunction About(props) {\r\n\r\n  function RenderLeader({ leader }) {\r\n      return (\r\n        <Media className=\"mt-5\">\r\n          <Media left className=\"mr-5\">\r\n            <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n          </Media>\r\n          <Media body>\r\n            <Media heading>{leader.name}</Media>\r\n            <p>{leader.designation}</p>\r\n            {leader.description}\r\n          </Media>\r\n        </Media>\r\n      );\r\n    }\r\n\r\n  function RenderContent({ leaders, isLoading, errMess }) {\r\n      if (isLoading) {\r\n        return <Loading />;\r\n      }\r\n      else if (errMess) {\r\n        return <h4>{errMess}</h4>;\r\n      }\r\n      else\r\n        return (\r\n          <Stagger in>\r\n            {props.leaders.leaders.map(leader => (\r\n              <Fade in key={leader.id}>\r\n                <RenderLeader key={leader.id} leader={leader} />\r\n              </Fade>\r\n            ))}\r\n          </Stagger>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                      <RenderContent\r\n                        leaders={props.leaders}\r\n                        isLoading={props.leaders.isLoading}\r\n                        errMess={props.errMess}\r\n                      />\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb ,BreadcrumbItem,\r\n  Modal, ModalHeader, ModalBody, Button, Label, Row} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n    handleSubmit(values){\r\n      this.toggleModal();\r\n      this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n          <React.Fragment>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody  className=\"m-2 font-weight-normal\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" >Rating</Label>\r\n                                <Control.select model=\".rating\" name=\"rating\"\r\n                                    className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"author\">Your Name</Label>\r\n\r\n                             <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                  placeholder=\"Your Name\"\r\n                                  className=\"form-control\"\r\n                                  validators={{\r\n                                      required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                  }} />\r\n                              <Errors\r\n                                  className=\"text-danger\"\r\n                                  model=\".author\"\r\n                                  show=\"touched\"\r\n                                  messages={{\r\n                                      required: 'Required',\r\n                                      minLength: 'Must be greater than 2 characters',\r\n                                      maxLength: 'Must be 15 characters or less'\r\n                                  }}\r\n                               />\r\n                      </Row>\r\n\r\n\r\n                      <Row className=\"form-group\">\r\n                          <Label htmlFor=\"comment\">Comment</Label>\r\n\r\n                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                              rows=\"6\"\r\n                              className=\"form-control\" />\r\n                      </Row>\r\n                      <Row>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                      </Row>\r\n\r\n                    </LocalForm>\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n            <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n            </Button>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n}\r\n\r\n    // function RenderDish(props){}\r\n    function RenderDish({dish}) {\r\n        if (dish != null) {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                  <FadeTransform\r\n                          in\r\n                          transformProps={{\r\n                              exitTransform: 'scale(0.5) translateY(-50%)'\r\n                          }}>\r\n                      <Card>\r\n                          <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                          <CardBody>\r\n                              <CardTitle>{dish.name}</CardTitle>\r\n                              <CardText>{dish.description}</CardText>\r\n                          </CardBody>\r\n                      </Card>\r\n                  </FadeTransform>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    // function RenderComments(props){}\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if (comments != null) {\r\n            const cmnts =\r\n            <Stagger in>\r\n                {comments.map((comment) => {\r\n                    return (\r\n                        <Fade in>\r\n                        <li key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                        </li>\r\n                        </Fade>\r\n                    );\r\n                })}\r\n            </Stagger>\r\n\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4> Comments </h4>\r\n                    {cmnts}\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n            );\r\n        // if comments is empty\r\n        } else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n      if (props.isLoading) {\r\n          return(\r\n              <div className=\"container\">\r\n                  <div className=\"row\">\r\n                      <Loading />\r\n                  </div>\r\n              </div>\r\n          );\r\n      }\r\n      else if (props.errMess) {\r\n          return(\r\n              <div className=\"container\">\r\n                  <div className=\"row\">\r\n                      <h4>{props.errMess}</h4>\r\n                  </div>\r\n              </div>\r\n          );\r\n      }\r\n      else if (props.dish != null) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <Breadcrumb>\r\n\r\n                          <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                          <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                      </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish dish={props.dish} />\r\n                        <RenderComments comments={props.comments}\r\n                                      postComment={props.postComment}\r\n                                      dishId={props.dish.id}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default DishDetail;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"https://iamsarthakk.github.io/ReactWeb/assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                                alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addLeaders(promos)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => alert(\"Thank you for your feedback!\" + JSON.stringify(response)))\r\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n});\r\n\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n      this.props.fetchDishes();\r\n      this.props.fetchComments();\r\n      this.props.fetchPromos();\r\n      this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n          const HomePage = () => {\r\n               return(\r\n                 <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                />\r\n               );\r\n             }\r\n\r\n           const DishWithId = ({match}) => {\r\n             return(\r\n               <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                  isLoading={this.props.dishes.isLoading}\r\n                  errMess={this.props.dishes.errMess}\r\n                  comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                  commentsErrMess={this.props.comments.errMess}\r\n                  postComment={this.props.postComment}\r\n                />\r\n             );\r\n           };\r\n\r\n        return (\r\n          <div>\r\n            <Header />\r\n            <div>\r\n              <TransitionGroup>\r\n                  <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                    <Switch location={this.props.location}>\r\n                        <Route path='/home' component={HomePage} />\r\n                        <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />} />\r\n                        <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                        <Route path='/menu/:dishId' component={DishWithId} />\r\n                        <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}  postFeedback={this.props.postFeedback}/>} />\r\n                        <Redirect to=\"/home\" />\r\n                    </Switch>\r\n                  </CSSTransition>\r\n                </TransitionGroup>\r\n            </div>\r\n            <Footer />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n/* <Redirect to=\"/Home\" /> this is a default path. anything dosemt match Home or Menu,\r\nwill be returned to Home */\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};\r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};\r\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n      combineReducers({\r\n          dishes: Dishes,\r\n          comments: Comments,\r\n          promotions: Promotions,\r\n          leaders: Leaders,\r\n          ...createForms({\r\n              feedback: InitialFeedback\r\n          })\r\n      }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}\r\n","// import React from 'react';\r\nimport React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n        // adding BrowserRouter. the application now is congigured to make use of the react router\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n              <div className=\"App\">\r\n                <Main />\r\n              </div>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}